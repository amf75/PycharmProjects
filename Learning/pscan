import socket
import math
import time
import os
import fcntl
import struct
import sys
import netifaces

def getInterface():
    networkCard = netifaces.interfaces()
    for netActive in networkCard:
        a = netifaces.ifaddresses(netActive)
        if a.__len__() != 0:
            print a
            print a

    return networkCard


networkInt=getInterface()
# print netifaces.ifaddresses(networkInt[0])[2][0]['addr']
# print netifaces.ifaddresses(networkInt[0])[2][0]['netmask']




# networkCardLen=networkCard.__len__()
# print networkCard
# #print networkCardLen
#
# for active in networkCard:
#     a=netifaces.ifaddresses(active)
#     if a.__len__()!=0:
#         for key in a.iteritems():
#             skey=key[1]
#             print  active, skey[0]['peer']


#sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#print socket.gethostbyname(socket.gethostname())
#print socket.inet_ntoa(fcntl.ioctl(sock.fileno(), 0x891b, struct.pack('256s','eth0'))[20:24])

# host="172.31.4.25"
# port= 1
# name= socket.gethostbyaddr(host)
# for port in range(1,1025):
#     sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#     result = sock.connect_ex((host,port))
#     if result == 0:
#         print "Port "+str(port)+" of server "+str(name[0])+" is open"
#         sock.close()



print "Finished"

